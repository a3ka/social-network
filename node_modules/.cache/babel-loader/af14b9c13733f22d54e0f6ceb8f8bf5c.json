{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/social-network/src/components/Dialogs/Dialogs.tsx\";\nimport React from 'react';\nimport { DialogItem } from \"./DialogItem/DialogsItem\";\nimport s from './Dialogs.module.css';\nimport { Message } from \"./Message/Message\";\nimport { addMessageActionCreator, updateNewMessageActionCreator } from \"../../redux/dialogs-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Dialogs = props => {\n  let dialogsElements = props.dialogs.map(d => {\n    return /*#__PURE__*/_jsxDEV(DialogItem, {\n      name: d.name,\n      id: d.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  });\n  let messagesElements = props.messages.map(m => {\n    return /*#__PURE__*/_jsxDEV(Message, {\n      message: m.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }); //  let newMessageElement = React.createRef<HTMLTextAreaElement>()\n\n  const onClickSendMessageHandler = () => {\n    props.dispatch(addMessageActionCreator());\n  };\n\n  const onChangeMessageHandler = e => {\n    let message = e.currentTarget.value;\n    props.dispatch(updateNewMessageActionCreator(message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogsItems,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: messagesElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: props.newMessageText,\n        onChange: onChangeMessageHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickSendMessageHandler,\n        children: \"Send message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n};\n_c = Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["/home/aka/Documents/social-network/src/components/Dialogs/Dialogs.tsx"],"names":["React","DialogItem","s","Message","addMessageActionCreator","updateNewMessageActionCreator","Dialogs","props","dialogsElements","dialogs","map","d","name","id","messagesElements","messages","m","message","onClickSendMessageHandler","dispatch","onChangeMessageHandler","e","currentTarget","value","dialogsItems","newMessageText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AAEA,SAAQC,uBAAR,EAAiCC,6BAAjC,QAAqE,6BAArE;;AAiBA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAA6B;AAChD,MAAIC,eAAe,GAAGD,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAkBC,CAAC,IAAI;AACzC,wBAAO,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEA,CAAC,CAACC,IAApB;AAA0B,MAAA,EAAE,EAAED,CAAC,CAACE;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFqB,CAAtB;AAGA,MAAIC,gBAAgB,GAAGP,KAAK,CAACQ,QAAN,CAAeL,GAAf,CAAmBM,CAAC,IAAI;AAC3C,wBAAO,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA,CAAC,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFsB,CAAvB,CAJgD,CAQhD;;AAEA,QAAMC,yBAAyB,GAAG,MAAM;AACpCX,IAAAA,KAAK,CAACY,QAAN,CAAef,uBAAuB,EAAtC;AACH,GAFD;;AAIA,QAAMgB,sBAAsB,GAAIC,CAAD,IAAyC;AACpE,QAAIJ,OAAO,GAAGI,CAAC,CAACC,aAAF,CAAgBC,KAA9B;AACAhB,IAAAA,KAAK,CAACY,QAAN,CAAed,6BAA6B,CAACY,OAAD,CAA5C;AACH,GAHD;;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAEf,CAAC,CAACO,OAAlB;AAAA,4BACH;AAAK,MAAA,SAAS,EAAEP,CAAC,CAACsB,YAAlB;AAAA,gBACKhB;AADL;AAAA;AAAA;AAAA;AAAA,YADG,eAIH;AAAK,MAAA,SAAS,EAAEN,CAAC,CAACa,QAAlB;AAAA,gBACKD;AADL;AAAA;AAAA;AAAA;AAAA,YAJG,eAQH;AAAA,8BAAK;AAAU,QAAA,KAAK,EAAEP,KAAK,CAACkB,cAAvB;AAAuC,QAAA,QAAQ,EAAEL;AAAjD;AAAA;AAAA;AAAA;AAAA,cAAL,eACI;AAAQ,QAAA,OAAO,EAAEF,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH,CAhCM;KAAMZ,O","sourcesContent":["import React from 'react';\nimport {ChangeEvent} from 'react';\nimport {DialogItem} from \"./DialogItem/DialogsItem\";\nimport s from './Dialogs.module.css'\nimport {Message} from \"./Message/Message\";\nimport {ActionsTypes} from \"../../redux/state\";\nimport {addMessageActionCreator, updateNewMessageActionCreator} from \"../../redux/dialogs-reducer\";\n\ntype DialogsType = {\n    id: number,\n    name: string\n}\ntype MessagesType = {\n    id: number,\n    message: string\n}\ntype DialogsPropsType = {\n    dialogs: Array<DialogsType>\n    messages: Array<MessagesType>\n    newMessageText: string\n    dispatch: (action: ActionsTypes) => void\n}\n\nexport const Dialogs = (props: DialogsPropsType) => {\n    let dialogsElements = props.dialogs.map(d => {\n        return <DialogItem name={d.name} id={d.id}/>\n    })\n    let messagesElements = props.messages.map(m => {\n        return <Message message={m.message}/>\n    })\n\n    //  let newMessageElement = React.createRef<HTMLTextAreaElement>()\n\n    const onClickSendMessageHandler = () => {\n        props.dispatch(addMessageActionCreator())\n    }\n\n    const onChangeMessageHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        let message = e.currentTarget.value\n        props.dispatch(updateNewMessageActionCreator(message))\n    }\n\n    return <div className={s.dialogs}>\n        <div className={s.dialogsItems}>\n            {dialogsElements}\n        </div>\n        <div className={s.messages}>\n            {messagesElements}\n        </div>\n\n        <div><textarea value={props.newMessageText} onChange={onChangeMessageHandler}></textarea>\n            <button onClick={onClickSendMessageHandler}>Send message</button>\n        </div>\n\n    </div>\n}"]},"metadata":{},"sourceType":"module"}