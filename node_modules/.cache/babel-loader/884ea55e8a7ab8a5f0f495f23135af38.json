{"ast":null,"code":"const ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'; //Автоматическая типизация AC на основе возвращаемого значения функции AC\n\nlet initialState = {\n  messages: [{\n    id: 1,\n    message: 'Hi'\n  }, {\n    id: 2,\n    message: 'How is your it-incubator?'\n  }, {\n    id: 3,\n    message: 'Yo'\n  }],\n  dialogs: [{\n    id: 1,\n    name: 'Andrey'\n  }, {\n    id: 2,\n    name: 'Ekaterina'\n  }, {\n    id: 3,\n    name: 'Dimych'\n  }, {\n    id: 4,\n    name: 'Alex'\n  }, {\n    id: 5,\n    name: 'Sergei'\n  }, {\n    id: 6,\n    name: 'Eva1'\n  }],\n  newMessageText: ''\n};\nexport const dialogsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_MESSAGE:\n      const message = {\n        id: 4,\n        message: state.newMessageText\n      };\n      state.messages.push(message);\n      state.newMessageText = '';\n      return state;\n\n    case UPDATE_NEW_MESSAGE_TEXT:\n      state.newMessageText = action.newMessage;\n      return state;\n\n    default:\n      return state;\n  }\n};\nexport const addMessageActionCreator = () => {\n  return {\n    type: 'ADD-MESSAGE'\n  };\n};\nexport const updateNewMessageActionCreator = newMessage => {\n  return {\n    type: 'UPDATE-NEW-MESSAGE-TEXT',\n    newMessage: newMessage\n  };\n};","map":{"version":3,"sources":["/home/aka/Documents/social-network/src/redux/dialogs-reducer.ts"],"names":["ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","initialState","messages","id","message","dialogs","name","newMessageText","dialogsReducer","state","action","type","push","newMessage","addMessageActionCreator","updateNewMessageActionCreator"],"mappings":"AAEA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,uBAAuB,GAAG,yBAAhC,C,CAEA;;AAIA,IAAIC,YAA6B,GAAG;AAChCC,EAAAA,QAAQ,EAAE,CACN;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE;AAAjB,GADM,EAEN;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE;AAAjB,GAFM,EAGN;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE;AAAjB,GAHM,CADsB;AAMhCC,EAAAA,OAAO,EAAE,CACL;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,IAAI,EAAE;AAAd,GADK,EAEL;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,IAAI,EAAE;AAAd,GAFK,EAGL;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,IAAI,EAAE;AAAd,GAHK,EAIL;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,IAAI,EAAE;AAAd,GAJK,EAKL;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,IAAI,EAAE;AAAd,GALK,EAML;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,IAAI,EAAE;AAAd,GANK,CANuB;AAchCC,EAAAA,cAAc,EAAE;AAdgB,CAApC;AAiBA,OAAO,MAAMC,cAAc,GAAG,YAAiE;AAAA,MAAhEC,KAAgE,uEAAvCR,YAAuC;AAAA,MAAzBS,MAAyB;;AAC3F,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,WAAL;AACI,YAAMK,OAAO,GAAG;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAEK,KAAK,CAACF;AAAvB,OAAhB;AACAE,MAAAA,KAAK,CAACP,QAAN,CAAeU,IAAf,CAAoBR,OAApB;AACAK,MAAAA,KAAK,CAACF,cAAN,GAAwB,EAAxB;AACA,aAAOE,KAAP;;AACJ,SAAKT,uBAAL;AACIS,MAAAA,KAAK,CAACF,cAAN,GAAuBG,MAAM,CAACG,UAA9B;AACA,aAAOJ,KAAP;;AACJ;AACI,aAAOA,KAAP;AAVR;AAYH,CAbM;AAeP,OAAO,MAAMK,uBAAuB,GAAG,MAAM;AACzC,SAAO;AACHH,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMI,6BAA6B,GAAIF,UAAD,IAAwB;AACjE,SAAO;AACHF,IAAAA,IAAI,EAAE,yBADH;AAC8BE,IAAAA,UAAU,EAAEA;AAD1C,GAAP;AAGH,CAJM","sourcesContent":["import {ActionsTypes, DialogsPageType, ProfilePageType} from \"./store\";\n\nconst ADD_MESSAGE = 'ADD-MESSAGE'\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'\n\n//Автоматическая типизация AC на основе возвращаемого значения функции AC\nexport type ActionsDialogsTypes = ReturnType<typeof addMessageActionCreator>\n    | ReturnType<typeof updateNewMessageActionCreator>\n\nlet initialState: DialogsPageType = {\n    messages: [\n        {id: 1, message: 'Hi'},\n        {id: 2, message: 'How is your it-incubator?'},\n        {id: 3, message: 'Yo'},\n    ],\n    dialogs: [\n        {id: 1, name: 'Andrey'},\n        {id: 2, name: 'Ekaterina'},\n        {id: 3, name: 'Dimych'},\n        {id: 4, name: 'Alex'},\n        {id: 5, name: 'Sergei'},\n        {id: 6, name: 'Eva1'},\n    ],\n    newMessageText: ''\n}\n\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: ActionsTypes) => {\n    switch (action.type) {\n        case ADD_MESSAGE:\n            const message = {id: 4, message: state.newMessageText}\n            state.messages.push(message)\n            state.newMessageText = ('')\n            return state\n        case UPDATE_NEW_MESSAGE_TEXT:\n            state.newMessageText = action.newMessage\n            return state\n        default:\n            return state\n    }\n}\n\nexport const addMessageActionCreator = () => {\n    return {\n        type: 'ADD-MESSAGE'\n    } as const\n}\nexport const updateNewMessageActionCreator = (newMessage: string) => {\n    return {\n        type: 'UPDATE-NEW-MESSAGE-TEXT', newMessage: newMessage\n    } as const\n}"]},"metadata":{},"sourceType":"module"}