{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/social-network/src/components/Dialogs/DialogsContainer.tsx\";\nimport React from 'react';\nimport { addMessageActionCreator, updateNewMessageActionCreator } from \"../../redux/dialogs-reducer\";\nimport StoreContext from '../../StoreContext';\nimport { Dialogs } from './Dialogs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DialogsContainer = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n      children: store => {\n        let state = store.getState().dialogsReducer;\n\n        const onClickSendMessageHandler = () => {\n          store.dispatch(addMessageActionCreator());\n        };\n\n        const onChangeMessageHandler = message => {\n          store.dispatch(updateNewMessageActionCreator(message));\n        };\n\n        return /*#__PURE__*/_jsxDEV(Dialogs, {\n          dialogPage: state,\n          updateNewMessage: onChangeMessageHandler,\n          addMessage: onClickSendMessageHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n};\n_c = DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"sources":["/home/aka/Documents/social-network/src/components/Dialogs/DialogsContainer.tsx"],"names":["React","addMessageActionCreator","updateNewMessageActionCreator","StoreContext","Dialogs","DialogsContainer","store","state","getState","dialogsReducer","onClickSendMessageHandler","dispatch","onChangeMessageHandler","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,uBAAR,EAAiCC,6BAAjC,QAAqE,6BAArE;AAEA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAAQC,OAAR,QAAsB,WAAtB;;AAOA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAElC,sBAAO;AAAA,2BAAK,QAAC,YAAD,CAAc,QAAd;AAAA,gBAGHC,KAAD,IAAW;AACP,YAAIC,KAAK,GAAGD,KAAK,CAACE,QAAN,GAAiBC,cAA7B;;AAEA,cAAMC,yBAAyB,GAAG,MAAM;AACpCJ,UAAAA,KAAK,CAACK,QAAN,CAAeV,uBAAuB,EAAtC;AACH,SAFD;;AAIA,cAAMW,sBAAsB,GAAIC,OAAD,IAAqB;AAChDP,UAAAA,KAAK,CAACK,QAAN,CAAeT,6BAA6B,CAACW,OAAD,CAA5C;AACH,SAFD;;AAGA,4BAAO,QAAC,OAAD;AAAS,UAAA,UAAU,EAAEN,KAArB;AACS,UAAA,gBAAgB,EAAEK,sBAD3B;AAES,UAAA,UAAU,EAAEF;AAFrB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGH;AAhBG;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAP;AAoBH,CAtBM;KAAML,gB","sourcesContent":["import React from 'react';\nimport {addMessageActionCreator, updateNewMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport {ReduxStoreType} from \"../../redux/redux-store\";\nimport StoreContext from '../../StoreContext';\nimport {Dialogs} from './Dialogs';\n\n\ntype DialogsPropsType = {\n    store: ReduxStoreType\n}\n\nexport const DialogsContainer = () => {\n\n    return <div><StoreContext.Consumer>\n        {\n\n            (store) => {\n                let state = store.getState().dialogsReducer\n\n                const onClickSendMessageHandler = () => {\n                    store.dispatch(addMessageActionCreator())\n                }\n\n                const onChangeMessageHandler = (message: string) => {\n                    store.dispatch(updateNewMessageActionCreator(message))\n                }\n                return <Dialogs dialogPage={state}\n                                updateNewMessage={onChangeMessageHandler}\n                                addMessage={onClickSendMessageHandler}/>\n            }}\n    </StoreContext.Consumer>\n\n    </div>\n}"]},"metadata":{},"sourceType":"module"}