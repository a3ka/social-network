{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/social-network/src/components/Profile/MyPosts/MyPosts.tsx\";\nimport React from 'react';\nimport s from './MyPosts.module.css';\nimport { Post } from \"./Post/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyPosts = props => {\n  let postsElement = props.postData.map(p => {\n    return /*#__PURE__*/_jsxDEV(Post, {\n      message: p.message,\n      likeCount: p.likesCount\n    }, p.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }); //let newPostElement = React.createRef<HTMLTextAreaElement>() //переменная которая будет содержать ссылку\n\n  const addPost = () => {\n    props.addPost();\n  };\n\n  let updateNewPostText = e => {\n    let newText = e.currentTarget.value;\n    props.updateNewPostText(newText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: props.newPostText,\n        onChange: updateNewPostText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addPost,\n      children: \"Add post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.posts,\n      children: postsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n_c = MyPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"sources":["/home/aka/Documents/social-network/src/components/Profile/MyPosts/MyPosts.tsx"],"names":["React","s","Post","MyPosts","props","postsElement","postData","map","p","message","likesCount","id","addPost","updateNewPostText","e","newText","currentTarget","value","newPostText","posts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,IAAR,QAAmB,aAAnB;;AAcA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAA6B;AAChD,MAAIC,YAAY,GAAGD,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAmBC,CAAC,IAAI;AACvC,wBAAO,QAAC,IAAD;AAAiB,MAAA,OAAO,EAAEA,CAAC,CAACC,OAA5B;AAAqC,MAAA,SAAS,EAAED,CAAC,CAACE;AAAlD,OAAWF,CAAC,CAACG,EAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFkB,CAAnB,CADgD,CAKhD;;AAEA,QAAMC,OAAO,GAAG,MAAM;AAClBR,IAAAA,KAAK,CAACQ,OAAN;AACH,GAFD;;AAIA,MAAIC,iBAAiB,GAAIC,CAAD,IAAyC;AAC7D,QAAIC,OAAO,GAAGD,CAAC,CAACE,aAAF,CAAgBC,KAA9B;AACAb,IAAAA,KAAK,CAACS,iBAAN,CAAwBE,OAAxB;AACH,GAHD;;AAKA,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,6BAAK;AAAU,QAAA,KAAK,EAAEX,KAAK,CAACc,WAAvB;AAAoC,QAAA,QAAQ,EAAEL;AAA9C;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAFG,eAMH;AAAQ,MAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANG,eAOH;AAAK,MAAA,SAAS,EAAEX,CAAC,CAACkB,KAAlB;AAAA,gBACKd;AADL;AAAA;AAAA;AAAA;AAAA,YAPG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAYH,CA5BM;KAAMF,O","sourcesContent":["import React from 'react';\nimport {ChangeEvent} from 'react';\nimport s from './MyPosts.module.css'\nimport {Post} from \"./Post/Post\";\n\ntype postDataType = {\n    id: number,\n    message: string\n    likesCount: number\n}\ntype MyPostsPropsType = {\n    postData: Array<postDataType>\n    newPostText: string\n    addPost: () => void\n    updateNewPostText: (newText: string) => void\n}\n\nexport const MyPosts = (props: MyPostsPropsType) => {\n    let postsElement = props.postData.map(p => {\n        return <Post key={p.id} message={p.message} likeCount={p.likesCount}/>\n    })\n\n    //let newPostElement = React.createRef<HTMLTextAreaElement>() //переменная которая будет содержать ссылку\n\n    const addPost = () => {\n        props.addPost();\n    }\n\n    let updateNewPostText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        let newText = e.currentTarget.value\n        props.updateNewPostText(newText)\n    }\n\n    return <div>\n        <h3>My posts</h3>\n        <div><textarea value={props.newPostText} onChange={updateNewPostText}></textarea>\n        </div>\n        {/*привязка ссылки к конкретному элементу*/}\n\n        <button onClick={addPost}>Add post</button>\n        <div className={s.posts}>\n            {postsElement}\n        </div>\n\n    </div>\n}"]},"metadata":{},"sourceType":"module"}