{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/social-network/src/components/Profile/MyPosts/MyPostsContainer.tsx\";\nimport React from 'react';\nimport { addPostActionCreator, updateNewPostActionCreator } from '../../../redux/profile-reducer';\nimport { MyPosts } from \"./MyPosts\";\nimport StoreContext from '../../../StoreContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyPostsContainer = () => {\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: store => {\n      let state = store.getState().profileReducer;\n\n      const onClickAddPostHandler = () => {\n        store.dispatch(addPostActionCreator());\n      };\n\n      let onChangePostHandler = newText => {\n        store.dispatch(updateNewPostActionCreator(newText));\n      };\n\n      return /*#__PURE__*/_jsxDEV(MyPosts, {\n        addPost: onClickAddPostHandler,\n        updateNewPostText: onChangePostHandler,\n        postData: state.posts,\n        newPostText: state.newPostText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n};\n_c = MyPostsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPostsContainer\");","map":{"version":3,"sources":["/home/aka/Documents/social-network/src/components/Profile/MyPosts/MyPostsContainer.tsx"],"names":["React","addPostActionCreator","updateNewPostActionCreator","MyPosts","StoreContext","MyPostsContainer","store","state","getState","profileReducer","onClickAddPostHandler","dispatch","onChangePostHandler","newText","posts","newPostText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,oBAAR,EAA8BC,0BAA9B,QAA+D,gCAA/D;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;;AAMA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAClC,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAA,cAEEC,KAAD,IAAW;AACP,UAAIC,KAAK,GAAGD,KAAK,CAACE,QAAN,GAAiBC,cAA7B;;AACA,YAAMC,qBAAqB,GAAG,MAAM;AAChCJ,QAAAA,KAAK,CAACK,QAAN,CAAeV,oBAAoB,EAAnC;AACH,OAFD;;AAGA,UAAIW,mBAAmB,GAAIC,OAAD,IAAqB;AAC3CP,QAAAA,KAAK,CAACK,QAAN,CAAeT,0BAA0B,CAACW,OAAD,CAAzC;AACH,OAFD;;AAGA,0BAAO,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEH,qBAAlB;AACS,QAAA,iBAAiB,EAAEE,mBAD5B;AAES,QAAA,QAAQ,EAAEL,KAAK,CAACO,KAFzB;AAGS,QAAA,WAAW,EAAEP,KAAK,CAACQ;AAH5B;AAAA;AAAA;AAAA;AAAA,cAAP;AAIH;AAdF;AAAA;AAAA;AAAA;AAAA,UAAP;AAiBH,CAlBM;KAAMV,gB","sourcesContent":["import React from 'react';\nimport {addPostActionCreator, updateNewPostActionCreator} from '../../../redux/profile-reducer';\nimport {MyPosts} from \"./MyPosts\";\nimport {ReduxStoreType} from \"../../../redux/redux-store\";\nimport StoreContext from '../../../StoreContext';\n\ntype MyPostsPropsType = {\n    store: ReduxStoreType\n}\n\nexport const MyPostsContainer = () => {\n    return <StoreContext.Consumer>\n        {\n            (store) => {\n                let state = store.getState().profileReducer\n                const onClickAddPostHandler = () => {\n                    store.dispatch(addPostActionCreator())\n                }\n                let onChangePostHandler = (newText: string) => {\n                    store.dispatch(updateNewPostActionCreator(newText))\n                }\n                return <MyPosts addPost={onClickAddPostHandler}\n                                updateNewPostText={onChangePostHandler}\n                                postData={state.posts}\n                                newPostText={state.newPostText}/>\n            }\n\n        }</StoreContext.Consumer>\n}"]},"metadata":{},"sourceType":"module"}